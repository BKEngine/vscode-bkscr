<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>name</key>
    <string>Bagel</string>
    <key>scopeName</key>
    <string>source.bagel</string>
    <key>uuid</key>
	<string>93E017CC-6F27-11D9-90EB-000D34589AF7</string>
    <key>fileTypes</key>
    <array>
		<string>bkpsr</string>
	</array>
    <key>patterns</key>
    <array>
		<dict>
			<key>include</key>
			<string>#functiondefine</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#classdefine</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#classcall</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#staticfunc</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#functioncall</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variables</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>controls</key>
		<dict>
			<key>match</key>
			<string>\b(default|switch|case|break|continue|do|while|for|foreach|in|if|else|return|try|catch|throw|with|enum|yield)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.bagel</string>
				</dict>
			</dict>
		</dict>
		
		<key>defines</key>
		<dict>
			<key>match</key>
			<string>\b(property|setter|getter|class|function|extends|propget|propset|var|static)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.defines.bagel</string>
				</dict>
			</dict>
		</dict>

		<key>types</key>
		<dict>
			<key>match</key>
			<string>\b(int|string|number|const)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.bagel</string>
				</dict>
			</dict>
		</dict>

		<key>operators</key>
		<dict>
			<key>match</key>
			<string>\b(new|delete|instanceof|incontextof|bitand|bitor|bitxor|bitnot)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operators.bagel</string>
				</dict>
			</dict>
		</dict>

		<key>consts</key>
		<dict>
			<key>match</key>
			<string>\b(true|false|void|global|this|super)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.bagel</string>
				</dict>
			</dict>
		</dict>
		
		<key>variable</key>
		<dict>
			<key>match</key>
			<string>\b([_A-Za-z][_A-Za-z0-9]*)\b</string>
			<key>name</key>
			<string>variable.other.bagel</string>
		</dict>

		<key>variable2</key>
		<dict>
			<key>match</key>
			<string>(\.([_A-Za-z][_A-Za-z0-9]*))\b</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.bagel</string>
				</dict>
			</dict>
		</dict>

		<key>numbers</key>
		<dict>
			<key>match</key>
			<string>(0[Xx][A-Fa-f0-9]*(\.[A-Fa-f0-9]*)?([pP][\+\-]?[A-Fa-f0-9]*)?)|(\d+(\.(\d*))?([eE][\+\-]?\d+)?)|(\.\d+([eE][\+\-]?\d+)?)</string>
			<key>name</key>
            <string>constant.numeric.bagel</string>
		</dict>
		
		<key>normalstring</key>
        <dict>
            <key>match</key>
            <string>(\")((?:[^"]*(?:"")*)*)(\")</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bagel</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bagel</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.bagel</string>
        </dict>

        <key>string_escape</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\(\\|[abfnrtv'"]|[xX][a-fA-F0-9]{0,4})</string>
                     <key>name</key>
                    <string>constant.character.escape.bagel</string>
               </dict>
                <dict>
                    <key>match</key>
                    <string>\\.</string>
                     <key>name</key>
                    <string>invalid.illegal.unknown-escape.bagel</string>
                </dict>
            </array>
        </dict>
		
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
    						[#0\- +]*                           # flags
    						((-?\d+)|\*(-?\d+\$)?)?            # minimum field width
    						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
    						[SsGgFfDd]           # conversion type
    					</string>
					<key>name</key>
					<string>constant.other.placeholder.bagel</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%%</string>
					<key>name</key>
					<string>constant.other.placeholder.bagel</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.bagel</string>
				</dict>
			</array>
		</dict>
		
        <key>string</key>
        <dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bagel</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bagel</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.bagel</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escape</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
        </dict>

		<key>literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#controls</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#defines</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#consts</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#normalstring</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		
        <key>linecomment</key>
        <dict>
            <key>name</key>
            <string>comment.line.bagel</string>
            <key>match</key>
            <string>//.*$</string>
        </dict>
        
        <key>blockcomment</key>
        <dict>
            <key>name</key>
            <string>comment.block.bagel</string>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
        </dict>
		
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#linecomment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#blockcomment</string>
				</dict>
			</array>
		</dict>
		
		<key>functiondefine</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#functiondefine1</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functiondefine2</string>
				</dict>
			</array>
		</dict>
		
		<key>functiondefine1</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.defines.bagel</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.bagel</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(function)\s+([a-zA-Z_]\w*)?\s*(?={)</string>
			<key>name</key>
			<string>meta.function.bagel</string>
		</dict>

		<key>functiondefine2</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.defines.bagel</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.bagel</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.bagel</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>\b(function)\s+([a-zA-Z_]\w*)?\s*(\()</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.bagel</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*[A-Za-z_][A-Za-z_0-9]*(?=\s*\))</string>
					<key>name</key>
					<string>variable.parameter.function.bagel</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*[A-Za-z_][A-Za-z_0-9]*(?!\s*\))</string>
					<key>name</key>
					<string>invalid.illegal.bagel</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Za-z_][A-Za-z_0-9]*</string>
					<key>name</key>
					<string>variable.parameter.function.bagel</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^,\s]</string>
					<key>name</key>
					<string>invalid.illegal.bagel</string>
				</dict>
			</array>
			<key>name</key>
			<string>meta.function.bagel</string>
		</dict>

		<key>functioncall</key>
		<dict>
			<key>name</key>
			<string>support.function.any-method.bagel</string>
			<key>match</key>
			<string>\b([A-Za-z_]\w*)\b(?=\s*\([^)]*\))</string>
		</dict>
		
		<key>classcall</key>
		<dict>
			<key>match</key>
			<string>\b(new)\s+([_A-Za-z]\w*)\b(?=\s*\([^)]*\))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operators.bagel</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.class.any-method.bagel</string>
				</dict>
			</dict>
		</dict>

		<key>classdefine</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.defines.bagel</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.bagel</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.defines.bagel</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.class.bagel</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(class)\s+([a-zA-Z_]\w*)(?:\s+(extends)\s+(.*))?</string>
			<key>name</key>
			<string>meta.function.bagel</string>
		</dict>
		
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable2</string>
				</dict>
			</array>
		</dict>
		
		<key>staticfunc</key>
		<dict>
			<key>match</key>
			<string>\b(Date\.(getYear|setYear|getMonth|setMonth|getDay|setDay|getHour|setHour|getMinute|setMinute|getSecond|setSecond|format)|Math\.(PI|E|sgn|pow|abs|sqrt|lg|ln|log|floor|ceil|round|sin|cos|tan|asin|acos|atan|random)|Regex\.(search|searchAll|getSubMatch|replaceFirst|replaceAll)|Flags\.(contains|split|mask|merge)|Coroutine\.(resume|restart|stop|status))\b</string>
			<key>name</key>
			<string>support.function.library.bagel</string>
		</dict>
		
	</dict>
</dict>
</plist>